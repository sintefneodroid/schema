// automatically generated by the FlatBuffers compiler, do not modify

package Neodroid.FBS;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FSimulatorConfiguration extends Struct {
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FSimulatorConfiguration __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int width() { return bb.getInt(bb_pos + 0); }
  public int height() { return bb.getInt(bb_pos + 4); }
  public boolean fullScreen() { return 0!=bb.get(bb_pos + 8); }
  public int qualityLevel() { return bb.getInt(bb_pos + 12); }
  public float timeScale() { return bb.getFloat(bb_pos + 16); }
  public float targetFrameRate() { return bb.getFloat(bb_pos + 20); }
  public int simulationType() { return bb.get(bb_pos + 24) & 0xFF; }
  public int frameSkips() { return bb.getInt(bb_pos + 28); }
  public int resetIterations() { return bb.getInt(bb_pos + 32); }
  public int numOfEnvironments() { return bb.getInt(bb_pos + 36); }
  public boolean doSerialiseIndividualSensors() { return 0!=bb.get(bb_pos + 40); }
  public boolean doSerialiseUnobservables() { return 0!=bb.get(bb_pos + 41); }

  public static int createFSimulatorConfiguration(FlatBufferBuilder builder, int width, int height, boolean fullScreen, int qualityLevel, float timeScale, float targetFrameRate, int simulationType, int frameSkips, int resetIterations, int numOfEnvironments, boolean doSerialiseIndividualSensors, boolean doSerialiseUnobservables) {
    builder.prep(4, 44);
    builder.pad(2);
    builder.putBoolean(doSerialiseUnobservables);
    builder.putBoolean(doSerialiseIndividualSensors);
    builder.putInt(numOfEnvironments);
    builder.putInt(resetIterations);
    builder.putInt(frameSkips);
    builder.pad(3);
    builder.putByte((byte)simulationType);
    builder.putFloat(targetFrameRate);
    builder.putFloat(timeScale);
    builder.putInt(qualityLevel);
    builder.pad(3);
    builder.putBoolean(fullScreen);
    builder.putInt(height);
    builder.putInt(width);
    return builder.offset();
  }
}

