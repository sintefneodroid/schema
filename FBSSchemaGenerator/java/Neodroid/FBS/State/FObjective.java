// automatically generated by the FlatBuffers compiler, do not modify

package Neodroid.FBS.State;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FObjective extends Table {
  public static FObjective getRootAsFObjective(ByteBuffer _bb) { return getRootAsFObjective(_bb, new FObjective()); }
  public static FObjective getRootAsFObjective(ByteBuffer _bb, FObjective obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FObjective __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String objectiveName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer objectiveNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public int maxEpisodeLength() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float solvedThreshold() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createFObjective(FlatBufferBuilder builder,
      int objective_nameOffset,
      int max_episode_length,
      float solved_threshold) {
    builder.startObject(3);
    FObjective.addSolvedThreshold(builder, solved_threshold);
    FObjective.addMaxEpisodeLength(builder, max_episode_length);
    FObjective.addObjectiveName(builder, objective_nameOffset);
    return FObjective.endFObjective(builder);
  }

  public static void startFObjective(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addObjectiveName(FlatBufferBuilder builder, int objectiveNameOffset) { builder.addOffset(0, objectiveNameOffset, 0); }
  public static void addMaxEpisodeLength(FlatBufferBuilder builder, int maxEpisodeLength) { builder.addInt(1, maxEpisodeLength, 0); }
  public static void addSolvedThreshold(FlatBufferBuilder builder, float solvedThreshold) { builder.addFloat(2, solvedThreshold, 0.0f); }
  public static int endFObjective(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

