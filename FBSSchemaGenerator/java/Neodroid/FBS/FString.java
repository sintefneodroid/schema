// automatically generated by the FlatBuffers compiler, do not modify

package Neodroid.FBS;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FString extends Table {
  public static FString getRootAsFString(ByteBuffer _bb) { return getRootAsFString(_bb, new FString()); }
  public static FString getRootAsFString(ByteBuffer _bb, FString obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FString __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String str() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer strAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }

  public static int createFString(FlatBufferBuilder builder,
      int strOffset) {
    builder.startObject(1);
    FString.addStr(builder, strOffset);
    return FString.endFString(builder);
  }

  public static void startFString(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addStr(FlatBufferBuilder builder, int strOffset) { builder.addOffset(0, strOffset, 0); }
  public static int endFString(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // str
    return o;
  }
}

